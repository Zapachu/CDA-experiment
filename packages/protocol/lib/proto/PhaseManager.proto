syntax = "proto3";

service GameService {
    rpc registerPhases (RegisterPhasesReq) returns (RegisterPhasesRes) {
    }

    rpc setPhaseResult (SetPhaseResultReq) returns (SetPhaseResultRes) {
    }

    rpc sendBackPlayer (SendBackPlayerReq) returns (SendBackPlayerRes) {
    }
}
message RegisterPhasesReq {
    message phaseRegInfo {
        string namespace = 1;
        string jsUrl = 2;
        string rpcUri = 3;
        string type = 4;
    }
    repeated phaseRegInfo phases = 1;
}
message RegisterPhasesRes {
    bool success = 1;
}
message PhaseResult {
    string uniKey = 1;
    string point = 2;
    string detailIframeUrl = 3;
}
message SendBackPlayerReq {
    string elfGameId = 1;
    string playUrl = 2;
    string playerToken = 3;
    string nextPhaseKey = 4;
    PhaseResult phaseResult = 5;
}
message SetPhaseResultReq {
    string elfGameId = 1;
    string playUrl = 2;
    string playerToken = 3;
    PhaseResult phaseResult = 4;
}
message SetPhaseResultRes {
    bool success = 1;
}
message SendBackPlayerRes {
    string sendBackUrl = 1;
}

service PhaseService {
    rpc newPhase (NewPhaseReq) returns (NewPhaseRes) {
    }
}
message NewPhaseReq {
    string elfGameId = 1;
    string namespace = 2;
    string param = 3; //JSON string
    string owner = 4;
}
message NewPhaseRes {
    string playUrl = 1;
}
